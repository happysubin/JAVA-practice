plugins {
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    // id 'jacoco'
    id "net.bytebuddy.byte-buddy-gradle-plugin" version "1.12.19"
    id 'org.jetbrains.kotlin.jvm'

}

group = 'happysubin'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    springStatemachineVersion = '4.0.0'
}



dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/net.bytebuddy/byte-buddy
    implementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.12.19'

//    implementation 'org.mockito:mockito-core:4.10.0'
    testImplementation 'org.mockito:mockito-inline:3.6.0' //static 메서드를 모킹하기 위해 필요
//    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'org.springframework.kafka:spring-kafka'

    implementation 'org.springframework.boot:spring-boot-starter-websocket'


    //redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.17.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    //implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation "org.springframework.boot:spring-boot-starter-security"


    implementation "org.springframework.statemachine:spring-statemachine-starter"

    implementation "org.springframework.statemachine:spring-statemachine-data-jpa"


}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.statemachine:spring-statemachine-bom:${springStatemachineVersion}"
    }
}

//test {
//    finalizedBy jacocoTestReport // report is always generated after tests run
//}
//jacocoTestReport {
//    dependsOn test // tests are required to run before generating the report
//    reports {
//        xml.required = false
//        csv.required = false
//        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
//    }
//}

byteBuddy {
    transformation {
        plugin = net.bytebuddy.build.CachedReturnPlugin.class
    }
}
kotlin {
    jvmToolchain(17)
}
